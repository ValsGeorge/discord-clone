{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import compression from 'compression';\r\nimport cookieParser from 'cookie-parser';\r\nimport cors from 'cors';\r\nimport express from 'express';\r\nimport helmet from 'helmet';\r\nimport hpp from 'hpp';\r\nimport morgan from 'morgan';\r\nimport swaggerJSDoc from 'swagger-jsdoc';\r\nimport swaggerUi from 'swagger-ui-express';\r\nimport { NODE_ENV, PORT, LOG_FORMAT, ORIGIN, CREDENTIALS } from '@config';\r\nimport  sequelize  from 'databases/index';\r\nimport { Routes } from '@interfaces/routes.interface';\r\nimport errorMiddleware from '@middlewares/error.middleware';\r\nimport { logger, stream } from '@utils/logger';\r\n\r\nclass App {\r\n  public app: express.Application;\r\n  public env: string;\r\n  public port: string | number;\r\n\r\n  constructor() {\r\n    this.app = express();\r\n    this.env = NODE_ENV || 'development';\r\n    this.port = PORT || 3000;\r\n  }\r\n\r\n  public async initialize(routes: Routes[]) {\r\n    await this.connectToDatabase();\r\n    this.initializeMiddleware();\r\n    this.initializeRoutes(routes);\r\n    if (this.env !== 'production') {\r\n      this.initializeSwagger();\r\n    }\r\n    this.initializeErrorHandling();\r\n  }\r\n\r\n  public listen() {\r\n    this.app.listen(this.port, () => {\r\n      logger.info(`======= ENV: ${this.env} ========`);\r\n      logger.info(`ðŸš€ App listening on the port ${this.port}`);\r\n      logger.info(`=================================`);\r\n    });\r\n  }\r\n\r\n  public getServer() {\r\n    return this.app;\r\n  }\r\n\r\n  private async connectToDatabase() {\r\n    try {\r\n      // await dbConnection.authenticate();\r\n      // await dbConnection.sync();\r\n      const db = await sequelize;\r\n      console.log(db);\r\n      await db.authenticate()\r\n        .then(() => console.log('Database connected...'))\r\n        .catch((err: any) => console.log('Error: ' + err));\r\n      \r\n      await db.sync()\r\n        .then(() => console.log('Database synced...'))\r\n        .catch((err: any) => console.log('Error: ' + err));\r\n      \r\n      \r\n      logger.info(`=================================`);\r\n      logger.info(`ðŸ“š App connected to the database`);\r\n    } catch (error) {\r\n      logger.error(`=================================`);\r\n      logger.error(`ðŸ’” App failed to connect to the database`);\r\n      logger.error(error);\r\n    }\r\n  }\r\n\r\n  private initializeMiddleware() {\r\n    this.app.use(morgan(LOG_FORMAT, { stream }));\r\n    this.app.use(cors({ origin: ORIGIN, credentials: CREDENTIALS }));\r\n    this.app.use(hpp());\r\n    this.app.use(helmet());\r\n    this.app.use(compression());\r\n    this.app.use(express.json());\r\n    this.app.use(express.urlencoded({ extended: true }));\r\n    this.app.use(cookieParser());\r\n  }\r\n\r\n  private initializeRoutes(routes: Routes[]) {\r\n    routes.forEach(route => {\r\n      this.app.use('/', route.router);\r\n    });\r\n  }\r\n\r\n  private initializeSwagger() {\r\n    const options = {\r\n      swaggerDefinition: {\r\n        info: {\r\n          title: 'REST API',\r\n          version: '1.0.0',\r\n          description: 'Example docs'\r\n        }\r\n      },\r\n      apis: ['swagger.yaml']\r\n    };\r\n\r\n    const specs = swaggerJSDoc(options);\r\n    this.app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\r\n  }\r\n\r\n  private initializeErrorHandling() {\r\n    this.app.use(errorMiddleware);\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n"],"names":["compression","cookieParser","cors","express","helmet","hpp","morgan","swaggerJSDoc","swaggerUi","NODE_ENV","PORT","LOG_FORMAT","ORIGIN","CREDENTIALS","sequelize","errorMiddleware","logger","stream","App","app","env","port","initialize","routes","connectToDatabase","initializeMiddleware","initializeRoutes","initializeSwagger","initializeErrorHandling","listen","info","getServer","db","error","console","log","authenticate","then","catch","err","sync","use","origin","credentials","json","urlencoded","extended","forEach","route","router","options","swaggerDefinition","title","version","description","apis","specs","serve","setup"],"mappings":"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"}