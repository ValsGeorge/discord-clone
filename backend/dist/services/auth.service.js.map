{
    "version": 3,
    "sources": [
        "../../src/services/auth.service.ts"
    ],
    "sourcesContent": [
        "import { hash, compare } from 'bcrypt';\r\nimport { sign } from 'jsonwebtoken';\r\nimport { SECRET_KEY } from '@config';\r\nimport { CreateUserDto, LoginUserDto } from '@dtos/users.dto';\r\nimport { HttpException } from '@exceptions/HttpException';\r\nimport { DataStoredInToken, TokenData } from '@interfaces/auth.interface';\r\nimport { User } from '@interfaces/users.interface';\r\nimport userModel from '@models/users.model';\r\nimport { isEmpty } from '@utils/util';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass AuthService {\r\n  public users = userModel;\r\n\r\n  public async signup(userData: CreateUserDto): Promise<User> {\r\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\r\n\r\n    console.log(\"userData\", userData)\r\n\r\n    const findUser: User = await this.users.findOne({\r\n       username: userData.username \r\n    });\r\n    if (findUser) throw new HttpException(409, `This username ${userData.username} already exists`);\r\n\r\n    const hashedPassword = await hash(userData.password, 10);\r\n\r\n    const generatedUUID = uuidv4();\r\n\r\n    const createUserData: User = await this.users.create({\r\n      ...userData,\r\n      id: generatedUUID,\r\n      password: hashedPassword\r\n    });\r\n\r\n    return createUserData;\r\n  }\r\n\r\n  public async login(userData: LoginUserDto): Promise<{ cookie: string; findUser: User }> {\r\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\r\n    console.log(\"userData\", userData)\r\n    const findUser: User = await this.users.findOne({ \r\n       username: userData.username \r\n     });\r\n    if (!findUser) throw new HttpException(409, `This username ${userData.username} was not found`);\r\n\r\n    const isPasswordMatching: boolean = await compare(userData.password, findUser.password);\r\n    if (!isPasswordMatching) throw new HttpException(409, 'Password is not matching');\r\n\r\n    const tokenData = this.createToken(findUser);\r\n    const cookie = this.createCookie(tokenData);\r\n\r\n    return { cookie, findUser };\r\n  }\r\n\r\n  public async logout(userData: User): Promise<User> {\r\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\r\n\r\n    const findUser: User = await this.users.findOne({ \r\n       username: userData.username, password: userData.password \r\n     });\r\n    if (!findUser) throw new HttpException(409, `This username ${userData.username} was not found`);\r\n\r\n    return findUser;\r\n  }\r\n\r\n\r\n  public createToken(user: User): TokenData {\r\n    const dataStoredInToken: DataStoredInToken = { _id: user.id };\r\n    const secretKey: string = SECRET_KEY;\r\n    const expiresIn: number = 60 * 60;\r\n\r\n    return { expiresIn, token: sign(dataStoredInToken, secretKey, { expiresIn }) };\r\n  }\r\n\r\n  public createCookie(tokenData: TokenData): string {\r\n    return `Authorization=${tokenData.token}; HttpOnly; Max-Age=${tokenData.expiresIn};`;\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n"
    ],
    "names": [
        "hash",
        "compare",
        "sign",
        "SECRET_KEY",
        "HttpException",
        "userModel",
        "isEmpty",
        "v4",
        "uuidv4",
        "AuthService",
        "users",
        "signup",
        "userData",
        "findUser",
        "hashedPassword",
        "generatedUUID",
        "createUserData",
        "console",
        "log",
        "findOne",
        "where",
        "username",
        "password",
        "create",
        "id",
        "login",
        "isPasswordMatching",
        "tokenData",
        "cookie",
        "createToken",
        "createCookie",
        "logout",
        "user",
        "dataStoredInToken",
        "_id",
        "secretKey",
        "expiresIn",
        "token"
    ],
    "mappings": "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"
}
