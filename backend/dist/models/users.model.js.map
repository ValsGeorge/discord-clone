{"version":3,"sources":["../../src/models/users.model.ts"],"sourcesContent":["import { DataTypes, Model, Sequelize } from 'sequelize';\r\nimport sequelize from 'databases/index';\r\nimport Server from './servers.model';\r\n\r\nclass User extends Model {\r\n    public id: string;\r\n    public nickname: string;\r\n    public username: string;\r\n    public email: string;\r\n    public password: string;\r\n    public profilePicture: string | null;\r\n    public createdAt: Date;\r\n    public updatedAt: Date;\r\n\r\n    static associate(models: any): void {\r\n        User.hasMany(models.Server, {\r\n            foreignKey: 'owner',\r\n            as: 'ownedServers',\r\n        });\r\n        User.belongsToMany(models.Server, {\r\n            through: models.ServerMembers,\r\n            as: 'memberServers',\r\n            foreignKey: 'userId',\r\n        });\r\n    }\r\n}\r\n\r\nUser.init(\r\n    {\r\n        id: {\r\n            type: DataTypes.STRING,\r\n            primaryKey: true,\r\n            allowNull: false,\r\n        },\r\n        nickname: {\r\n            type: DataTypes.STRING,\r\n            allowNull: false,\r\n        },\r\n        username: {\r\n            type: DataTypes.STRING,\r\n            allowNull: false,\r\n            unique: true,\r\n        },\r\n        email: {\r\n            type: DataTypes.STRING,\r\n            allowNull: false,\r\n            unique: true,\r\n        },\r\n        password: {\r\n            type: DataTypes.STRING,\r\n            allowNull: false,\r\n        },\r\n        profilePicture: {\r\n            type: DataTypes.STRING,\r\n            allowNull: true,\r\n        },\r\n        createdAt: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false,\r\n            defaultValue: DataTypes.NOW,\r\n        },\r\n        updatedAt: {\r\n            type: DataTypes.DATE,\r\n            allowNull: false,\r\n            defaultValue: DataTypes.NOW,\r\n        },\r\n    },\r\n    {\r\n        tableName: 'users',\r\n        sequelize,\r\n    }\r\n);\r\n\r\nexport default User;\r\n"],"names":["DataTypes","Model","sequelize","User","associate","models","hasMany","Server","foreignKey","as","belongsToMany","through","ServerMembers","init","id","type","STRING","primaryKey","allowNull","nickname","username","unique","email","password","profilePicture","createdAt","DATE","defaultValue","NOW","updatedAt","tableName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAS,EAAEC,KAAK,QAAmB,YAAY;AACxD,OAAOC,eAAe,kBAAkB;AAGxC,IAAA,AAAMC,qBAuBL,AAvBD;;cAAMA;8BAAAA;aAAAA;8BAAAA;;;IAAAA,KAUKC,SAUN,GAVD,SAAOA,UAAUC,MAAW,EAAQ;QAVlCF,KAWOG,OAAO,CAACD,OAAOE,MAAM,EAAE;YACxBC,YAAY;YACZC,IAAI;QACR;QAdFN,KAeOO,aAAa,CAACL,OAAOE,MAAM,EAAE;YAC9BI,SAASN,OAAOO,aAAa;YAC7BH,IAAI;YACJD,YAAY;QAChB;IACJ;WApBEL;EAAaF;AAuBnBE,KAAKU,IAAI,CACL;IACIC,IAAI;QACAC,MAAMf,UAAUgB,MAAM;QACtBC,YAAY,IAAI;QAChBC,WAAW,KAAK;IACpB;IACAC,UAAU;QACNJ,MAAMf,UAAUgB,MAAM;QACtBE,WAAW,KAAK;IACpB;IACAE,UAAU;QACNL,MAAMf,UAAUgB,MAAM;QACtBE,WAAW,KAAK;QAChBG,QAAQ,IAAI;IAChB;IACAC,OAAO;QACHP,MAAMf,UAAUgB,MAAM;QACtBE,WAAW,KAAK;QAChBG,QAAQ,IAAI;IAChB;IACAE,UAAU;QACNR,MAAMf,UAAUgB,MAAM;QACtBE,WAAW,KAAK;IACpB;IACAM,gBAAgB;QACZT,MAAMf,UAAUgB,MAAM;QACtBE,WAAW,IAAI;IACnB;IACAO,WAAW;QACPV,MAAMf,UAAU0B,IAAI;QACpBR,WAAW,KAAK;QAChBS,cAAc3B,UAAU4B,GAAG;IAC/B;IACAC,WAAW;QACPd,MAAMf,UAAU0B,IAAI;QACpBR,WAAW,KAAK;QAChBS,cAAc3B,UAAU4B,GAAG;IAC/B;AACJ,GACA;IACIE,WAAW;IACX5B,WAAAA;AACJ;AAGJ,eAAeC,KAAK"}